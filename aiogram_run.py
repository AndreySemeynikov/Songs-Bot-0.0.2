import logging
import asyncio

from aiogram.types import BotCommand, BotCommandScopeDefault

from create_bot import bot, dp, admins
from handlers.start import start_router
from handlers.search import search_router


# from work_time.time_func import send_time_msg

logger = logging.getLogger(__name__)

async def set_commands():
    commands = [BotCommand(command='hello', description='–ü–æ–∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è'),
                BotCommand(command='start', description="–°—Ç–∞—Ä—Ç"),
                BotCommand(command='profile', description='–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å'),
                ]
    await bot.set_my_commands(commands, BotCommandScopeDefault())

async def stop_bot():
    try:
        for admin_id in admins:
            await bot.send_message(admin_id, '–ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –ó–∞ —á—Ç–æ?üòî')
    except:
        pass

async def start_bot():
    await set_commands()
    try:
        for admin_id in admins:
            await bot.send_message(admin_id, f'–Ø –∑–∞–ø—É—â–µ–Ωü•≥')
    except:
        pass


async def main():
    # scheduler.add_job(send_time_msg, 'interval', seconds=10)
    # scheduler.start()
    dp.include_router(start_router)
    dp.include_router(search_router)

    # —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Ñ—É–Ω–∫—Ü–∏–π –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ –∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞
    dp.startup.register(start_bot)
    dp.shutdown.register(stop_bot)

    current_commands = await bot.get_my_commands()
    logger.info(current_commands)

    # –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞ –≤ —Ä–µ–∂–∏–º–µ long polling –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç –æ—á–∏—â–∞–µ—Ç –≤—Å–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ –±—ã–ª–∏ –∑–∞ –µ–≥–æ –º–æ–º–µ–Ω—Ç—ã –±–µ–∑–¥–µ–π—Å—Ç–≤–∏—è
    try:
        await bot.delete_webhook(drop_pending_updates=True)
        await dp.start_polling(bot, allowed_updates=dp.resolve_used_update_types())
    finally:
        await bot.session.close()


if __name__ == "__main__":
    # todo call function from file_manager to create dictionary
    logger.info("Starting bot polling...")
    asyncio.run(main())
